#*********************************************
# Данный файл содержит описание синтаксиса тестов и примеры тестов
#*********************************************
#
# Выражение в угловых скобках в описании синтаксиса является
# формальным значением элемента синтаксиса, которое нужно
# заменить реальным значением 
#
# Любой тест записывается строкой вида:
# <алгоритм>?<параметры> -> <тест>?<параметры>
#     <алгоритм> - название алгоритма (koh, kutter, fridrich, langelaar)
#     <тест> - название теста (view, distortion, transform)
#     <параметры> состоят из пар вида <имя_параметра>=<значение_параметра>,
#                              разделенных знаком &
#
#*********************************************
#
# Пример 1: koh?threshold=6&channel=Y -> view?name=visual\\koh_14.bmp
# В данном случае алгоритм "koh" подвергается тесту "view",
# koh имеет два параметра: "threshold" и "channel",
# значение threshold равно "6", значение channel = "Y",
# view имеет один параметр "name" со значением "visual\\koh_14.bmp"
#
#*********************************************
#
# Параметры алгоритма koh:
# threshold (вещественный) - сила встраивания
# channel (одно из значений - RED, GREEN, BLUE или Y) - канал встраивания
#
# Значения по умолчанию:
# threshold=10, channel=3
#
#*********************************************
#
# Параметры алгоритма kutter:
# power (вещественный) - сила встраивания
# mult (целочисленный) - плотность встраивания (1 - максимальная)
# cross (целочисленный) - размер креста
# channel (одно из значений - RED, GREEN, BLUE или Y) - канал встраивания
#
# Значения по умолчанию:
# power=0.04, cross=3, mult=16, channel=3
#
#*********************************************
#
# Параметры алгоритма fridrich:
# alpha (вещественный) - сила встраивания для низкочастотного метода
# gamma (вещественный) - сила встраивания для среднечастотного метода
# mode (одно из значений - 1, 2, 3) - какие методы использовать
#	1 - только низкочастотный
#	2 - только среднечастотный
#	3 - оба
# channel (одно из значений - RED, GREEN, BLUE или Y) - канал встраивания
#
# Значения по умолчанию:
# alpha=0.1, gamma=1, mode=3, channel=3
#
#*********************************************
#
# Параметры алгоритма langelaar:
# threshold (вещественный) - сила встраивания
# channel (одно из значений - RED, GREEN, BLUE или Y) - канал встраивания
#
# Значения по умолчанию:
# threshold=100, channel=3
#
#*********************************************
#
# Параметры теста view (визуальный тест на искажения):
# name (строковый) - имя файла, в который будет сохранен контейнер со
#	встроенным по соответствующему методу ЦВЗ
#
#*********************************************
#
# Параметры теста distortion (статистический тест на искажения,
#	результатом является значение PSNR):
#
# channel (одно из значений - RED, GREEN, BLUE или Y) - канал встраивания
#
# Значения по умолчанию:
# channel=3
#
#*********************************************
#
# Параметры теста transform (тест на устойчивость к искажениям,
#	результатом является значение BER):
#
# size (целочисленный) - размер встраиваемого сообщения в байтах
# tsize (целочисленный) - количество встраиваемых байт
# num (целочисленный) - количество повторений теста (результат усредняется)
# tf (строковый) - цепочка трансформаций
#
# Значения по умолчанию:
# size = (число_точек_в_контейнере)/512, tsize=size, num=2
#
#*********************************************
#
# Цепочка трансформаций имеет вид:
# <количество>*<трансформация>;<количество>*<трансформация>;...;<количество>*<трансформация>
# 
# количество - число повторений трансформации, необязательный параметр
#
# Трансформация имеет вид:
# <имя>:<параметр>:<параметр>:...:<параметр>
#
#*********************************************
#
# Пример цепочки трансформаций:
# JPEG:30;3*IMPULSE_NOISE:5;BILATERAL:10:20:3
#
# В данном случае цепочка состоит из трех трансформаций:
# JPEG, IMPULSE_NOISE, BILATERAL
#
# JPEG имеет значение единственного параметра, равное 30 
# IMPULSE_NOISE имеет значение единственного параметра, равное 5 и будет повторена трижды
# BILATERAL имеет значения первого, второго и третьего параметров, 
#	равные соответственно 10, 20 и 3 
#
#*********************************************
#
# Трансформации:
# JPEG:качество - JPEG-сжатие
# UNIFORM_NOISE:уровень - равномерный шум
# IMPULSE_NOISE:уровень - импульсный шум
# GAUSS_NOISE:уровень - гауссовский шум
# FURIE_NOISE:количество:уровень:канал - шум в области ДПФ
# WAVELET_NOISE:уровень - шум в области вейвлет-преобразования
# BLUR:размер - среднеарифметический фильтр
# GEOMETRIC_BLUR:размер - среднегеометрический фильтр
# HARMONIC_BLUR:размер - среднегармонический фильтр
# BILATERAL:s:s_r:размер - билатеральный фильтр
# ADAPTIVE_LOCAL:уровень_шума:размер - адаптивный локальный фильтр
# MEDIAN:размер - медианный фильтр
# ADAPTIVE_MEDIAN:размер:максимальный_размер - адаптивный медианный фильтр
# MID_POINT:размер - фильтр срединной точки 
# EQ_HISTOGRAM - эквализация гистограммы
#
#*********************************************
#
# Для запуска серии тестов с постепенным изменением некоторого параметра,
# вместо значения этого параметра нужно использовать следующую конструкцию:
# $start$end$increment$
#
# start - начальное значение параметра
# end - конечное значение
# increment - шаг изменения параметра
#
#*********************************************
#
# Пример: koh?threshold=8&channel=Y -> transform?tf=JPEG:$100$5$-5$
#
# В данном случае будет запущена серия тестов с изменением
# значения параметра JPEG, отвечающего за качество, от 100 до 5 с шагом в -5
#
#*********************************************
#
# Для отображения в строке помимо результата теста значения некоторого параметра,
# необходимо заключать его между символами @
#
#*********************************************
#
# Пример: koh?threshold=8&channel=Y -> transform?tf=JPEG:@30@
#
# В данном случае будет в строке результата теста будет выведено не только 
# значение BER, но и значение параметра JPEG, отвечающего за качество
#
#*********************************************
#
# Для использования какого-нибудь значения в строке более одного раза
#  можно использовать переменную подстановки
#
# Объявление переменной:
# %<имя>%<значение>%, вместо этой конструкции в итоге будет подставлено <значение>  
#
# Использование переменной:
# %<имя>%
# при этом вместо %<имя>% подставляется соответствующее значение
#
#*********************************************
#
# Пример: koh?threshold=%v%$1$30$1$%&channel=Y -> view?name=koh_%v%.bmp
#
# В данном случае будет сохранена серия картинок с результатами
# встраивания ЦВЗ по методу Коха для различной силы встраивания (от 1 до 30).
# Для силы встраивания 10 будет создан файл koh_10.bmp, для силы 20 - koh_20.bmp и т. д.
#
# polynom?gamma=1 -> view?name=F:\\polynom.bmp
# polynom?gamma=1 -> picture?name=F:\\polynom_copy.bmp&wm_name=F:\\copyright.bmp
#convolution?gamma=0.5&alpha=0.12 -> picture?tf=JPEG:50&name=F:\\polynom_copy.bmp&wm_name=F:\\copyright.bmp
#convolution?gamma=0.3&alpha=0.12 -> transform?tf=JPEG:75&size=32&tsize=512
#convolution?gamma=0.3&alpha=0.12 -> view?name=F:\\convol.bmp

#polynom?gamma=1 -> transform?tf=UNIFORM_NOISE:0&size=32&tsize=512

#convolution?gamma=1&alpha=0.02 -> picture?tf=BLUR:1&name=F:\\CR\\polynom_filter.bmp&wm_name=F:\\copyright.bmp

#walsh?gamma=0.3&alpha=0.12 -> transform?tf=BLUR:@$1$10$1$@&size=32&tsize=512
#walsh?gamma=0.3&alpha=0.12 -> transform?tf=JPEG:$100$5$-5$&size=32&tsize=512
#walsh?gamma=0.3&alpha=0.12 -> transform?tf=UNIFORM_NOISE:@$5$100$5$@&size=32&tsize=512
#walsh?gamma=0.3&alpha=0.12 -> transform?tf=IMPULSE_NOISE:@$1$20$1$@&size=32&tsize=512

legendre?gamma=1&alpha=0 -> transform?tf=BLUR:@$1$10$1$@&size=32&tsize=512
legendre?gamma=1&alpha=0 -> transform?tf=JPEG:$100$5$-5$&size=32&tsize=512
legendre?gamma=1&alpha=0 -> transform?tf=UNIFORM_NOISE:@$5$100$5$@&size=32&tsize=512
legendre?gamma=1&alpha=0 -> transform?tf=IMPULSE_NOISE:@$1$20$1$@&size=32&tsize=512

#convol?gamma=0.125&alpha=0.12 -> transform?tf=UNIFORM_NOISE:@$5$100$5$@&size=32&tsize=512

-------walsh?gamma=0.3&alpha=0.12 -> transform?tf=BLUR:@$1$10$1$@&size=32&tsize=512-------
1 0,529297
2 0,5
3 0,490234
4 0,529297
5 0,474609
6 0,501953
7 0,462891
8 0,462891
9 0,462891
10 0,544922
--------------------------------
-------walsh?gamma=0.3&alpha=0.12 -> transform?tf=JPEG:$100$5$-5$&size=32&tsize=512-------
 1
 1
 1
 1
 0,998047
 0,972656
 0,777344
 0,660156
 0,535156
 0,556641
 0,496094
 0,537109
 0,472656
 0,5
 0,5
 0,535156
 0,474609
 0,5
 0,505859
 0,544922
--------------------------------
-------walsh?gamma=0.3&alpha=0.12 -> transform?tf=UNIFORM_NOISE:@$5$100$5$@&size=32&tsize=512-------
5 1
10 1
15 1
20 1
25 1
30 0,998047
35 0,996094
40 0,982422
45 0,972656
50 0,927734
55 0,894531
60 0,876953
65 0,822266
70 0,802734
75 0,748047
80 0,730469
85 0,667969
90 0,658203
95 0,621094
100 0,619141
--------------------------------
-------walsh?gamma=0.3&alpha=0.12 -> transform?tf=IMPULSE_NOISE:@$1$20$1$@&size=32&tsize=512-------
1 0,998047
2 0,957031
3 0,841797
4 0,8125
5 0,71875
6 0,697266
7 0,712891
8 0,669922
9 0,632812
10 0,613281
11 0,576172
12 0,605469
13 0,582031
14 0,544922
15 0,533203
16 0,558594
17 0,558594
18 0,5625
19 0,523438
20 0,533203
--------------------------------

walsh?gamma=1&alpha=0.12 -> picture?tf=BLUR:1&name=F:\\CR\\walsh_filter.bmp&wm_name=F:\\copyright.bmp
walsh?gamma=1&alpha=0.12 -> picture?tf=UNIFORM_NOISE:70&name=F:\\CR\\walsh_filter.bmp&wm_name=F:\\copyright.bmp
walsh?gamma=1&alpha=0.12 -> picture?tf=IMPULSE_NOISE:15&name=F:\\CR\\walsh_filter.bmp&wm_name=F:\\copyright.bmp
walsh?gamma=1&alpha=0.12 -> picture?tf=JPEG:50&name=F:\\CR\\walsh_filter.bmp&wm_name=F:\\copyright.bmp

polynom?gamma=1 -> picture?name=F:\\CR\\legendre.bmp&wm_name=F:\\copyright.bmp

#polynom?gamma=1&alpha=0.1 -> transform?tf=JPEG:$100$5$-5$&size=32&tsize=512
#polynom?gamma=1&alpha=0.1 -> transform?tf=UNIFORM_NOISE:@$5$100$5$@&size=32&tsize=512
#polynom?gamma=1&alpha=0.1 -> transform?tf=IMPULSE_NOISE:@$1$20$1$@&size=32&tsize=512
polynom?gamma=1&alpha=0.1 -> transform?tf=UNIFORM_NOISE:0&size=32&tsize=512

polynom?gamma=1&alpha=0.1 -> save?name=polynom.png&info=polynom.txt&size=32&tsize=512
polynom?gamma=1&alpha=0.1 -> check?name=polynom.png&info=polynom.txt

convolution?gamma=1&alpha=0.1 -> save?name=polynom.png&info=polynom.txt&size=32&tsize=512
convolution?gamma=1&alpha=0.1 -> check?name=polynom.png&info=polynom.txt

#convolution?gamma=1&alpha=0.1 -> save?name=polynom.png&info=polynom.txt&size=32&tsize=512&wm_name=copyright.bmp
#convolution?gamma=1&alpha=0.1 -> check?name=polynom.png&info=polynom.txt&wm_name=copyright_x.bmp
polynom?gamma=1&alpha=0.1&intMethod=trapezium -> save?name=polynom.png&info=polynom.txt&size=32&tsize=512&wm_name=copyright.bmp
polynom?gamma=1&alpha=0.1&intMethod=trapezium -> check?name=polynom.png&info=polynom.txt&wm_name=copyright_x.bmp

-------legendre?gamma=1&alpha=0 -> transform?tf=JPEG:$100$5$-5$&size=32&tsize=512-------
 0,974609
 0,949219
 0,958984
 0,978516
 0,966797
 0,943359
 0,916016
 0,884766
 0,828125
 0,802734
 0,78125
 0,759766
 0,728516
 0,712891
 0,660156
 0,652344
 0,587891
 0,529297
 0,492188
 0,490234
--------------------------------
-------legendre?gamma=1&alpha=0 -> transform?tf=UNIFORM_NOISE:@$5$100$5$@&size=32&tsize=512-------
5 0,953125
10 0,964844
15 0,951172
20 0,949219
25 0,958984
30 0,945312
35 0,935547
40 0,927734
45 0,886719
50 0,904297
55 0,867188
60 0,898438
65 0,875
70 0,845703
75 0,861328
80 0,830078
85 0,798828
90 0,84375
95 0,777344
100 0,810547
--------------------------------
-------legendre?gamma=1&alpha=0 -> transform?tf=IMPULSE_NOISE:@$1$20$1$@&size=32&tsize=512-------
1 0,927734
2 0,923828
3 0,875
4 0,824219
5 0,859375
6 0,828125
7 0,816406
8 0,771484
9 0,767578
10 0,773438
11 0,710938
12 0,75
13 0,724609
14 0,708984
15 0,697266
16 0,697266
17 0,677734
18 0,644531
19 0,707031
20 0,697266
--------------------------------